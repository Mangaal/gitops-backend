// Code generated by go-swagger; DO NOT EDIT.

package application_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewPodLogsParams creates a new PodLogsParams object
// with the default values initialized.
func NewPodLogsParams() *PodLogsParams {
	var ()
	return &PodLogsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPodLogsParamsWithTimeout creates a new PodLogsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPodLogsParamsWithTimeout(timeout time.Duration) *PodLogsParams {
	var ()
	return &PodLogsParams{

		timeout: timeout,
	}
}

// NewPodLogsParamsWithContext creates a new PodLogsParams object
// with the default values initialized, and the ability to set a context for a request
func NewPodLogsParamsWithContext(ctx context.Context) *PodLogsParams {
	var ()
	return &PodLogsParams{

		Context: ctx,
	}
}

// NewPodLogsParamsWithHTTPClient creates a new PodLogsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPodLogsParamsWithHTTPClient(client *http.Client) *PodLogsParams {
	var ()
	return &PodLogsParams{
		HTTPClient: client,
	}
}

/*PodLogsParams contains all the parameters to send to the API endpoint
for the pod logs operation typically these are written to a http.Request
*/
type PodLogsParams struct {

	/*Container*/
	Container *string
	/*Follow*/
	Follow *bool
	/*Name*/
	Name string
	/*Namespace*/
	Namespace *string
	/*PodName*/
	PodName string
	/*SinceSeconds*/
	SinceSeconds *string
	/*SinceTimeNanos
	  Non-negative fractions of a second at nanosecond resolution. Negative
	second values with fractions must still have non-negative nanos values
	that count forward in time. Must be from 0 to 999,999,999
	inclusive. This field may be limited in precision depending on context.

	*/
	SinceTimeNanos *int32
	/*SinceTimeSeconds
	  Represents seconds of UTC time since Unix epoch
	1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to
	9999-12-31T23:59:59Z inclusive.

	*/
	SinceTimeSeconds *string
	/*TailLines*/
	TailLines *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the pod logs params
func (o *PodLogsParams) WithTimeout(timeout time.Duration) *PodLogsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the pod logs params
func (o *PodLogsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the pod logs params
func (o *PodLogsParams) WithContext(ctx context.Context) *PodLogsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the pod logs params
func (o *PodLogsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the pod logs params
func (o *PodLogsParams) WithHTTPClient(client *http.Client) *PodLogsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the pod logs params
func (o *PodLogsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithContainer adds the container to the pod logs params
func (o *PodLogsParams) WithContainer(container *string) *PodLogsParams {
	o.SetContainer(container)
	return o
}

// SetContainer adds the container to the pod logs params
func (o *PodLogsParams) SetContainer(container *string) {
	o.Container = container
}

// WithFollow adds the follow to the pod logs params
func (o *PodLogsParams) WithFollow(follow *bool) *PodLogsParams {
	o.SetFollow(follow)
	return o
}

// SetFollow adds the follow to the pod logs params
func (o *PodLogsParams) SetFollow(follow *bool) {
	o.Follow = follow
}

// WithName adds the name to the pod logs params
func (o *PodLogsParams) WithName(name string) *PodLogsParams {
	o.SetName(name)
	return o
}

// SetName adds the name to the pod logs params
func (o *PodLogsParams) SetName(name string) {
	o.Name = name
}

// WithNamespace adds the namespace to the pod logs params
func (o *PodLogsParams) WithNamespace(namespace *string) *PodLogsParams {
	o.SetNamespace(namespace)
	return o
}

// SetNamespace adds the namespace to the pod logs params
func (o *PodLogsParams) SetNamespace(namespace *string) {
	o.Namespace = namespace
}

// WithPodName adds the podName to the pod logs params
func (o *PodLogsParams) WithPodName(podName string) *PodLogsParams {
	o.SetPodName(podName)
	return o
}

// SetPodName adds the podName to the pod logs params
func (o *PodLogsParams) SetPodName(podName string) {
	o.PodName = podName
}

// WithSinceSeconds adds the sinceSeconds to the pod logs params
func (o *PodLogsParams) WithSinceSeconds(sinceSeconds *string) *PodLogsParams {
	o.SetSinceSeconds(sinceSeconds)
	return o
}

// SetSinceSeconds adds the sinceSeconds to the pod logs params
func (o *PodLogsParams) SetSinceSeconds(sinceSeconds *string) {
	o.SinceSeconds = sinceSeconds
}

// WithSinceTimeNanos adds the sinceTimeNanos to the pod logs params
func (o *PodLogsParams) WithSinceTimeNanos(sinceTimeNanos *int32) *PodLogsParams {
	o.SetSinceTimeNanos(sinceTimeNanos)
	return o
}

// SetSinceTimeNanos adds the sinceTimeNanos to the pod logs params
func (o *PodLogsParams) SetSinceTimeNanos(sinceTimeNanos *int32) {
	o.SinceTimeNanos = sinceTimeNanos
}

// WithSinceTimeSeconds adds the sinceTimeSeconds to the pod logs params
func (o *PodLogsParams) WithSinceTimeSeconds(sinceTimeSeconds *string) *PodLogsParams {
	o.SetSinceTimeSeconds(sinceTimeSeconds)
	return o
}

// SetSinceTimeSeconds adds the sinceTimeSeconds to the pod logs params
func (o *PodLogsParams) SetSinceTimeSeconds(sinceTimeSeconds *string) {
	o.SinceTimeSeconds = sinceTimeSeconds
}

// WithTailLines adds the tailLines to the pod logs params
func (o *PodLogsParams) WithTailLines(tailLines *string) *PodLogsParams {
	o.SetTailLines(tailLines)
	return o
}

// SetTailLines adds the tailLines to the pod logs params
func (o *PodLogsParams) SetTailLines(tailLines *string) {
	o.TailLines = tailLines
}

// WriteToRequest writes these params to a swagger request
func (o *PodLogsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Container != nil {

		// query param container
		var qrContainer string
		if o.Container != nil {
			qrContainer = *o.Container
		}
		qContainer := qrContainer
		if qContainer != "" {
			if err := r.SetQueryParam("container", qContainer); err != nil {
				return err
			}
		}

	}

	if o.Follow != nil {

		// query param follow
		var qrFollow bool
		if o.Follow != nil {
			qrFollow = *o.Follow
		}
		qFollow := swag.FormatBool(qrFollow)
		if qFollow != "" {
			if err := r.SetQueryParam("follow", qFollow); err != nil {
				return err
			}
		}

	}

	// path param name
	if err := r.SetPathParam("name", o.Name); err != nil {
		return err
	}

	if o.Namespace != nil {

		// query param namespace
		var qrNamespace string
		if o.Namespace != nil {
			qrNamespace = *o.Namespace
		}
		qNamespace := qrNamespace
		if qNamespace != "" {
			if err := r.SetQueryParam("namespace", qNamespace); err != nil {
				return err
			}
		}

	}

	// path param podName
	if err := r.SetPathParam("podName", o.PodName); err != nil {
		return err
	}

	if o.SinceSeconds != nil {

		// query param sinceSeconds
		var qrSinceSeconds string
		if o.SinceSeconds != nil {
			qrSinceSeconds = *o.SinceSeconds
		}
		qSinceSeconds := qrSinceSeconds
		if qSinceSeconds != "" {
			if err := r.SetQueryParam("sinceSeconds", qSinceSeconds); err != nil {
				return err
			}
		}

	}

	if o.SinceTimeNanos != nil {

		// query param sinceTime.nanos
		var qrSinceTimeNanos int32
		if o.SinceTimeNanos != nil {
			qrSinceTimeNanos = *o.SinceTimeNanos
		}
		qSinceTimeNanos := swag.FormatInt32(qrSinceTimeNanos)
		if qSinceTimeNanos != "" {
			if err := r.SetQueryParam("sinceTime.nanos", qSinceTimeNanos); err != nil {
				return err
			}
		}

	}

	if o.SinceTimeSeconds != nil {

		// query param sinceTime.seconds
		var qrSinceTimeSeconds string
		if o.SinceTimeSeconds != nil {
			qrSinceTimeSeconds = *o.SinceTimeSeconds
		}
		qSinceTimeSeconds := qrSinceTimeSeconds
		if qSinceTimeSeconds != "" {
			if err := r.SetQueryParam("sinceTime.seconds", qSinceTimeSeconds); err != nil {
				return err
			}
		}

	}

	if o.TailLines != nil {

		// query param tailLines
		var qrTailLines string
		if o.TailLines != nil {
			qrTailLines = *o.TailLines
		}
		qTailLines := qrTailLines
		if qTailLines != "" {
			if err := r.SetQueryParam("tailLines", qTailLines); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
