// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// V1alpha1ResourceResult ResourceResult holds the operation result details of a specific resource
//
// swagger:model v1alpha1ResourceResult
type V1alpha1ResourceResult struct {

	// group
	Group string `json:"group,omitempty"`

	// the state of any operation associated with this resource OR hook
	// note: can contain values for non-hook resources
	HookPhase string `json:"hookPhase,omitempty"`

	// the type of the hook, empty for non-hook resources
	HookType string `json:"hookType,omitempty"`

	// kind
	Kind string `json:"kind,omitempty"`

	// message for the last sync OR operation
	Message string `json:"message,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// namespace
	Namespace string `json:"namespace,omitempty"`

	// the final result of the sync, this is be empty if the resources is yet to be applied/pruned and is always zero-value for hooks
	Status string `json:"status,omitempty"`

	// indicates the particular phase of the sync that this is for
	SyncPhase string `json:"syncPhase,omitempty"`

	// version
	Version string `json:"version,omitempty"`
}

// Validate validates this v1alpha1 resource result
func (m *V1alpha1ResourceResult) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *V1alpha1ResourceResult) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1alpha1ResourceResult) UnmarshalBinary(b []byte) error {
	var res V1alpha1ResourceResult
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
